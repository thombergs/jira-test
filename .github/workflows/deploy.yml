# This is a basic workflow to help you get started with Actions

name: My Deployment flow

# Controls when the action will run. 
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-to-staging:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    name: Deploy to Staging
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create staging deployment
        id: deployment_staging
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          environment: Staging (Success)
      - name: Running staging deployment
        run: |
          echo Deploying to staging...
      - uses: chrnorm/deployment-status@releases/v1
        name: Update staging deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          state: "success"
          deployment_id: ${{ steps.deployment_staging.outputs.deployment_id }}
  deploy-failure:
    runs-on: ubuntu-18.04
    name: Failure Deployment
    steps: 
      - uses: chrnorm/deployment-action@releases/v1
        name: Create prod deployment
        id: deployment_prod_failure
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          environment: Production (failure)
      - name: Running production deployment
        run: |
          echo Deploying to production...
      - uses: chrnorm/deployment-status@releases/v1
        name: Update prod deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          state: "failure"
          deployment_id: ${{ steps.deployment_prod_failure.outputs.deployment_id }}
  deploy-to-pending:
    runs-on: ubuntu-18.04
    name: Pending Deployment
    steps: 
      - uses: chrnorm/deployment-action@releases/v1
        name: Create prod deployment
        id: deployment_prod_pending
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          environment: Production (pending)
      - name: Running production deployment
        run: |
          echo Deploying to production...
      - uses: chrnorm/deployment-status@releases/v1
        name: Update prod deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          state: "pending"
          deployment_id: ${{ steps.deployment_prod_pending.outputs.deployment_id }}
  deploy-to-inactive:
    runs-on: ubuntu-18.04
    name: Inactive Deployment
    steps: 
      - uses: chrnorm/deployment-action@releases/v1
        name: Create prod deployment
        id: deployment_prod_inactive
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          environment: Production (inactive)
      - name: Running production deployment
        run: |
          echo Deploying to production...
      - uses: chrnorm/deployment-status@releases/v1
        name: Update prod deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          state: "inactive"
          deployment_id: ${{ steps.deployment_prod_inactive.outputs.deployment_id }}
  deploy-to-error:
    runs-on: ubuntu-18.04
    name: Error Deployment
    steps: 
      - uses: chrnorm/deployment-action@releases/v1
        name: Create prod deployment
        id: deployment_prod_error
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          environment: Production (error)
      - name: Running production deployment
        run: |
          echo Deploying to production...
      - uses: chrnorm/deployment-status@releases/v1
        name: Update prod deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          state: "error"
          deployment_id: ${{ steps.deployment_prod_error.outputs.deployment_id }}
  deploy-to-inprogress:
    runs-on: ubuntu-18.04
    name: In Progress Deployment
    steps: 
      - uses: chrnorm/deployment-action@releases/v1
        name: Create prod deployment
        id: deployment_prod_progress
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          environment: Production (in progress)
      - name: Running production deployment
        run: |
          echo Deploying to production...
      - uses: chrnorm/deployment-status@releases/v1
        name: Update prod deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          state: "in_progress"
          deployment_id: ${{ steps.deployment_prod_progress.outputs.deployment_id }}
  deploy-to-queued:
    runs-on: ubuntu-18.04
    name: Queued Deployment
    steps: 
      - uses: chrnorm/deployment-action@releases/v1
        name: Create prod deployment
        id: deployment_prod_queued
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          environment: Production (queued)
      - name: Running production deployment
        run: |
          echo Deploying to production...
      - uses: chrnorm/deployment-status@releases/v1
        name: Update prod deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-cool-app.com
          state: "queued"
          deployment_id: ${{ steps.deployment_prod_queued.outputs.deployment_id }}
  # deploy-to-invalid:
  #  runs-on: ubuntu-18.04
  #  name: Invalid Deployment
  #  steps: 
  #    - uses: chrnorm/deployment-action@releases/v1
  #      name: Create prod deployment
  #      id: deployment_prod_invalid
  #      with:
  #        token: "${{ github.token }}"
  #        target_url: http://my-cool-app.com
  #        environment: Production (invalid)
  #    - name: Running production deployment
  #      run: |
  #        echo Deploying to production...
  #    - uses: chrnorm/deployment-status@releases/v1
  #      name: Update prod deployment
  #      with:
  #        token: "${{ github.token }}"
  #        target_url: http://my-cool-app.com
  #        state: "invalid"
  #        deployment_id: ${{ steps.deployment_prod_invalid.outputs.deployment_id }}
